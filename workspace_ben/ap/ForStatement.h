// This is reall -*- C++ -*-

#ifndef FOR_STATEMENT_H
#define FOR_STATEMENT_H

#include <Statement.h>

#include "Serializable.h"


/** Handles for-statements in the command line interpreter.
    cli implementation
*/
class ForStatement: public Statement 
{
 public:

  //! Constructor
  ForStatement(char *var, int low, int high, Statement *for_stmt);

  //! Destructor
  ~ForStatement();
  
  //! Parse the statement
  void process(CliArgList *loop_vars);

 private:
  int low, high;
  std::string var_name;
  Statement * for_stmt;

  #ifndef SWIG
    // AUTO GENERATED BY ../persistence/autopersist.py
    protected:
    ForStatement() {}
    private:
    friend class boost::serialization::access;
    template<class Archive>
    void serialize(Archive & ar, const unsigned int version) {
        this->pre_serialize(ar, version);
         try {                                                         
          ar & BOOST_SERIALIZATION_BASE_OBJECT_NVP(Statement);            
          BIE_CATCH_BOOST_SERIALIZATION_EXCEPTION;                     
         }                                                             
         try {                                                         
          ar & BOOST_SERIALIZATION_NVP(low);                        
          BIE_CATCH_BOOST_SERIALIZATION_EXCEPTION;                     
         }                                                             
         try {                                                         
          ar & BOOST_SERIALIZATION_NVP(high);                        
          BIE_CATCH_BOOST_SERIALIZATION_EXCEPTION;                     
         }                                                             
         try {                                                         
          ar & BOOST_SERIALIZATION_NVP(var_name);                        
          BIE_CATCH_BOOST_SERIALIZATION_EXCEPTION;                     
         }                                                             
         try {                                                         
          ar & BOOST_SERIALIZATION_NVP(for_stmt);                        
          BIE_CATCH_BOOST_SERIALIZATION_EXCEPTION;                     
         }                                                             
        this->post_serialize(ar, version);
    }
    #endif

};

#ifndef SWIG
BIE_CLASS_TYPE_INFO(ForStatement)
BIE_CLASS_EXPORT_KEY(ForStatement)
#endif
#endif
