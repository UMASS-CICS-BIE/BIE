// This is really -*- C++ -*-



#ifndef GalaxyModelTwoDCached_h
#define GalaxyModelTwoDCached_h

#include <gaussQ.h>
#include <Model.h>
#include <Histogram1D.h>

#include <GalaxyModelTwoD.h>

@include_persistence

namespace BIE {

  //+ CLICLASS GalaxyModelTwoDCached SUPER GalaxyModelTwoD
  /**
     Simple test galaxy model with one flux and no caching
  */
  class @persistent(GalaxyModelTwoDCached) : public @super(GalaxyModelTwoD)
  {
  public:

    //+ CLICONSTR int int SampleDistribution*
    //! Constructor 
    GalaxyModelTwoDCached(int ndim, int mdim, SampleDistribution *_dist) :
      GalaxyModelTwoD(ndim, mdim, _dist), current2(0) {}
      

    //! Destructor 
    ~GalaxyModelTwoDCached();

    //! Compute normalization of tiles
    double NormEval(double x, double y, SampleDistribution *d);

    //! Main method returning source density
    vector<double> Evaluate(double x, double y, SampleDistribution *d);

    /** @name Global parameters */
    //@{

    //! Size of A grid
    static int @ap(numA);
    
    //! Size of H grid
    static int @ap(numH);
    
    //@}

  private:
    double @ap(dA), @ap(dH);

    mmapGalCMG @ap(cache2);
    mmapGalCMG::iterator mit2;
    CacheGalaxyModelGrid *@ap(current2);

    void generate(double L, double B, SampleDistribution *d);
    void compute_bins();

    @persistent_end

  };

}

#endif
