// This is really -*- C++ -*-


#ifndef FivePointIntegration_h
#define FivePointLegeIntegration_h

#include <Integration.h>
#include <LikelihoodComputation.h>
  
@include_persistence

namespace BIE {

  //+ CLICLASS FivePointIntegration SUPER Integration
  /**
     Integrate using just the corners and middle of a tile
  */
  class @persistent(FivePointIntegration) : public @super(Integration) {
  public:
    //+ CLICONSTR
    //! Null constructor
     FivePointIntegration();

     //+ CLICONSTR double
     //! Constructor with desired relative error value
     FivePointIntegration(double desiredRelativeError);
     
     //! Destructor
    ~FivePointIntegration();
    
    // void ParameterChange(int nu, int nv);

 
    //! Deprecated. Compute Model Norm with direct calls to model
    double NormValue(Model* m, Tile* t, SampleDistribution* d);
    //! Deprecated. Compute Model valuewith direct calls to model
    vector<double> Value(Model* m, Tile* t, SampleDistribution* d);


    /** Compute value of model over a tile using a likelihoodCompuation
	object as an intermediary.  Calling thread will block until
	integration is completed and function returns.
	Missing:  Need Corresponding NormValue function
    */
    vector<double> Value(LikelihoodComputation* l, Model* m, Tile* t,
			 SampleDistribution* d);


    /** Deprecated. Compute model norm using line-of-sight style
	parallelism with direct calls
    */
    double NormValue(Model* m, Tile* t, SampleDistribution* d,
		     int irank, int nrank);

    /** Deprecated. Compute model value using line-of-sight style
	parallelism with direct calls
    */
    vector<double> Value(Model* m, Tile* t, SampleDistribution* d,
			 int irank, int nrank, MPI_Comm &comm);
    
  private:
    double @ap(desiredRelativeError);
    double @ap(estimatedError);

    // deprecated: remove    int nU, nV;
    // deprecated: remove   LegeQuad *U, *V;
    
    @persistent_end
  };
  
}
#endif


