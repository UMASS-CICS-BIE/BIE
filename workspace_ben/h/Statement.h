// This is -*- C++ -*-

#ifndef STATEMENT_H
#define STATEMENT_H

#include <CliArgList.h>

#include "Serializable.h"


/** 
* Abstract class that holds CLI statements.  Examples of statements 
* currently implemented are the assignment statement (AssignStatement)
* and the for statement (ForStatement).
*
* \see ForStatement
* \see AssignStatement
* \see PrintStatement
*/
class Statement: public Serializable {
public:
  /// Virtual method used to evaluate and execute statements.  
  virtual void process(CliArgList *loop_vars) = 0;

  #ifndef SWIG
    // AUTO GENERATED BY ../persistence/autopersist.py
    protected:
    Statement() {}
    private:
    friend class boost::serialization::access;
    template<class Archive>
    void serialize(Archive & ar, const unsigned int version) {
        this->pre_serialize(ar, version);
         try {                                                         
          ar & BOOST_SERIALIZATION_BASE_OBJECT_NVP(Serializable);            
          BIE_CATCH_BOOST_SERIALIZATION_EXCEPTION;                     
         }                                                             
        this->post_serialize(ar, version);
    }
    #endif

};
#ifndef SWIG
BIE_CLASS_ABSTRACT(Statement)


BIE_CLASS_EXPORT_KEY(Statement)
#endif
#endif
